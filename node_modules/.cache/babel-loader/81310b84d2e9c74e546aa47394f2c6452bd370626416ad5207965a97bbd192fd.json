{"ast":null,"code":"var _jsxFileName = \"/Users/yoonsoo/Documents/dev/artbook/src/saved/SavedCard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SavedCard({\n  userId,\n  objectId,\n  objectName,\n  objectUrl,\n  objectArtistName,\n  objectYear\n}) {\n  _s();\n  const [photo, setPhoto] = useState('');\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [favoriteArtworks, setFavoriteArtworks] = useState([]);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const fetchFavArtworks = async userId => {\n    try {\n      const response = await fetch(`/api/users/${userId}/fav-artworks`);\n      if (!response.ok) {\n        throw new Error('Failed to load favorite artworks');\n      }\n      const favArtworks = await response.json();\n      console.log('Favorite Artworks:', favArtworks);\n\n      // Update your state or display the data\n      setFavoriteArtworks(favArtworks);\n    } catch (error) {\n      console.error('Error fetching favorite artworks:', error);\n    }\n  };\n\n  // fetch fav artworks\n  // Call this function in a useEffect or on a button click\n  useEffect(() => {\n    if (userId) {\n      fetchFavArtworks(userId);\n    }\n  }, [userId]);\n  const checkIsFavorite = useCallback(() => {\n    console.log(\"favoriteArtworks:\", favoriteArtworks);\n    console.log(\"아이디\", objectId);\n    const isFound = favoriteArtworks.some(item => item.object_id === String(objectId));\n    if (isFound) {\n      console.log(`ID ${objectId}가 배열에 존재합니다.`);\n      setIsFavorite(true);\n    } else {\n      console.log(`ID ${objectId}가 배열에 없습니다.`);\n      setIsFavorite(false);\n    }\n  }, [favoriteArtworks, objectId]);\n  useEffect(() => {\n    if (objectId && favoriteArtworks.length > 0) {\n      checkIsFavorite();\n    }\n  }, [objectId, favoriteArtworks, checkIsFavorite]);\n  useEffect(() => {\n    console.log(`isFavorite updated: ${isFavorite}`);\n  }, [isFavorite]);\n  const toggleFavoriteArtwork = async () => {\n    if (isFavorite) {\n      removeArtwork();\n    } else {\n      saveArtwork();\n    }\n  };\n  const removeArtwork = async () => {\n    try {\n      const response = await fetch(`/api/users/${userId}/fav-artworks/${objectId}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to remove artwork');\n      }\n      console.log(\"Deleted Successfully\");\n      setIsFavorite(false);\n      fetchFavArtworks(userId);\n    } catch (error) {\n      console.error('Error removing artwork:', error);\n    }\n  };\n  const saveArtwork = async () => {\n    try {\n      const response = await fetch(`/api/users/${userId}/fav-artworks`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          object_id: objectId,\n          object_name: objectName,\n          object_url: objectUrl,\n          object_artistName: objectArtistName || 'Unknown',\n          object_year: objectYear || 'Unknown'\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save artwork');\n      }\n      const updatedUser = await response.json();\n      console.log('Artwork saved successfully:', updatedUser);\n      setIsFavorite(true);\n      fetchFavArtworks(userId);\n    } catch (error) {\n      console.error('Error saving artwork:', error);\n    }\n  };\n  useEffect(() => {\n    setPhoto(objectUrl);\n    setTitle(objectName);\n    if (objectArtistName !== \"\") {\n      setDescription(objectArtistName, objectYear);\n    } else {\n      // Display \"Unknown\" if the data does not exist\n      setDescription(\"Unknown\", objectYear);\n    }\n  }, [objectId, objectName, objectUrl, objectArtistName, objectYear]);\n\n  // Slice text if it is too long\n  const truncateText = (text, n) => {\n    return text.length > n ? text.slice(0, n) + '…' : text;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"savedBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: isFavorite ? '/img/heart-filled.svg' : '/img/heart.svg',\n      alt: \"button\",\n      className: \"fav_button_card\",\n      onClick: () => {\n        toggleFavoriteArtwork(); // Call the saveArtwork function\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: photo,\n        alt: title,\n        className: \"saved_imgBox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"saved_infoBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"saved_title\",\n        children: truncateText(title, 50)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"saved_description\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n}\n_s(SavedCard, \"DUSxLmSuo3UotWxAD/7cAxT1d2E=\");\n_c = SavedCard;\nexport default SavedCard;\nvar _c;\n$RefreshReg$(_c, \"SavedCard\");","map":{"version":3,"names":["useState","useEffect","useCallback","jsxDEV","_jsxDEV","SavedCard","userId","objectId","objectName","objectUrl","objectArtistName","objectYear","_s","photo","setPhoto","title","setTitle","description","setDescription","favoriteArtworks","setFavoriteArtworks","isFavorite","setIsFavorite","fetchFavArtworks","response","fetch","ok","Error","favArtworks","json","console","log","error","checkIsFavorite","isFound","some","item","object_id","String","length","toggleFavoriteArtwork","removeArtwork","saveArtwork","method","headers","body","JSON","stringify","object_name","object_url","object_artistName","object_year","updatedUser","truncateText","text","n","slice","className","children","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yoonsoo/Documents/dev/artbook/src/saved/SavedCard.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\n\nfunction SavedCard({ userId, objectId, objectName, objectUrl, objectArtistName, objectYear }) {\n    const [photo, setPhoto] = useState('');\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [favoriteArtworks, setFavoriteArtworks] = useState([]);\n    const [isFavorite, setIsFavorite] = useState(false);\n\n    const fetchFavArtworks = async (userId) => {\n        try {\n            const response = await fetch(`/api/users/${userId}/fav-artworks`);\n    \n            if (!response.ok) {\n                throw new Error('Failed to load favorite artworks');\n            }\n    \n            const favArtworks = await response.json();\n            console.log('Favorite Artworks:', favArtworks);\n\n            // Update your state or display the data\n            setFavoriteArtworks(favArtworks);\n        } catch (error) {\n            console.error('Error fetching favorite artworks:', error);\n        }\n    };\n\n    // fetch fav artworks\n    // Call this function in a useEffect or on a button click\n    useEffect(() => {\n        if (userId) {\n            fetchFavArtworks(userId);\n        }\n    }, [userId]);\n\n    const checkIsFavorite = useCallback(() => {\n        console.log(\"favoriteArtworks:\", favoriteArtworks);\n        console.log(\"아이디\", objectId);\n\n        const isFound = favoriteArtworks.some((item) => item.object_id === String(objectId));\n    \n        if (isFound) {\n            console.log(`ID ${objectId}가 배열에 존재합니다.`);\n            setIsFavorite(true);\n        } else {\n            console.log(`ID ${objectId}가 배열에 없습니다.`);\n            setIsFavorite(false);\n        }\n    }, [favoriteArtworks, objectId]);\n\n    useEffect(() => {\n        if (objectId && favoriteArtworks.length > 0) {\n            checkIsFavorite();\n        }\n    }, [objectId, favoriteArtworks, checkIsFavorite]);\n    \n\n    useEffect(() => {\n        console.log(`isFavorite updated: ${isFavorite}`);\n    }, [isFavorite]);\n\n    const toggleFavoriteArtwork = async () => {\n        if(isFavorite) {\n            removeArtwork();\n        } else {\n            saveArtwork();\n        }\n    }\n    const removeArtwork = async () => {\n        try {\n            const response = await fetch(`/api/users/${userId}/fav-artworks/${objectId}`, {\n                method: 'DELETE',\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to remove artwork');\n            } \n            \n            console.log(\"Deleted Successfully\");\n            setIsFavorite(false);\n            fetchFavArtworks(userId);\n        } catch (error) {\n            console.error('Error removing artwork:', error);\n        }\n    };\n\n    const saveArtwork = async () => {\n        try {\n            const response = await fetch(`/api/users/${userId}/fav-artworks`, {\n                method: 'PATCH',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    object_id: objectId,\n                    object_name: objectName,\n                    object_url: objectUrl,\n                    object_artistName: objectArtistName || 'Unknown',\n                    object_year: objectYear || 'Unknown',\n                }),\n            });\n    \n            if (!response.ok) {\n                throw new Error('Failed to save artwork');\n            }\n    \n            const updatedUser = await response.json();\n            console.log('Artwork saved successfully:', updatedUser);\n            setIsFavorite(true);\n            fetchFavArtworks(userId);\n        } catch (error) {\n            console.error('Error saving artwork:', error);\n        }\n    };\n\n    useEffect(() => {\n        setPhoto(objectUrl);\n        setTitle(objectName);\n        if (objectArtistName !== \"\") {\n            setDescription(objectArtistName, objectYear);\n        } else {\n            // Display \"Unknown\" if the data does not exist\n            setDescription(\"Unknown\", objectYear);\n        }\n    }, [objectId, objectName, objectUrl, objectArtistName, objectYear]);\n\n    // Slice text if it is too long\n    const truncateText = (text, n) => {\n        return text.length > n ? text.slice(0, n) + '…' : text;\n    };\n\n    return (\n        <div className=\"savedBox\">\n            <img \n                src={isFavorite ? '/img/heart-filled.svg' : '/img/heart.svg'}\n                alt=\"button\" \n                className=\"fav_button_card\" \n                onClick={() => {\n                    toggleFavoriteArtwork(); // Call the saveArtwork function\n                }} \n            />\n            <div><img src={photo} alt={title} className=\"saved_imgBox\"></img></div>\n            <div className=\"saved_infoBox\">\n                <div className=\"saved_title\">{truncateText(title, 50)}</div>\n                <div className=\"saved_description\">{description}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default SavedCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}