{"ast":null,"code":"import{useEffect,useState}from'react';import Nav from'../Nav.js';import Menu from'../Menu.js';import RecommendCard from'./RecommendCard.js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Recommend(_ref){let{userId}=_ref;const[isMenuOpen,setIsMenuOpen]=useState(false);const[userEmoji,setUserEmoji]=useState('');const[mostEmoji,setMostEmoji]=useState('');const[favoriteArtworks,setFavoriteArtworks]=useState([]);const[favoriteArtworksByMost,setFavoriteArtworksByMost]=useState([]);const[currentPageForFavorites,setCurrentPageForFavorites]=useState(1);// Pagination for favoriteArtworks\nconst[currentPageForMost,setCurrentPageForMost]=useState(1);// Pagination for favoriteArtworksByMost\nconst itemsPerPage=5;// Number of items per page for both lists\nconst toggleMenu=()=>{setIsMenuOpen(!isMenuOpen);};const fetchUserInfo=async userId=>{try{const response=await fetch(`http://localhost:8000/api/users/${userId}`);if(!response.ok){throw new Error('Failed to load favorite artworks');}const userInfo=await response.json();console.log('User Information Emoji:',userInfo.emojis);return userInfo.emojis;}catch(error){console.error('Error fetching favorite artworks:',error);return null;}};// Fetch favorite artworks by emoji\nconst fetchFavArtworksByEmoji=async emoji=>{try{const response=await fetch(`http://localhost:8000/api/users/emojis/${emoji}/fav-artworks`);if(!response.ok){throw new Error('Failed to fetch favorite artworks');}const favArtworks=await response.json();console.log('Favorite Artworks:',favArtworks);setFavoriteArtworks(favArtworks);// Update state\n}catch(error){console.error('Error fetching favorite artworks by emoji:',error);}};// Get the most saved emoji\nconst getMostSavedEmoji=async()=>{try{const response=await fetch(`http://localhost:8000/api/users/aggregate/most-saved-emojis`);if(!response.ok){throw new Error('Failed to fetch favorite artworks');}const mostSavedEmoji=await response.json();console.log(mostSavedEmoji[0]._id);return mostSavedEmoji[0]._id;}catch(error){console.error(error);return null;}};// Fetch favorite artworks by most saved emoji\nconst fetchFavArtworksByMostSavedEmoji=async mostEmoji=>{try{const response=await fetch(`http://localhost:8000/api/users/emojis/${mostEmoji}/fav-artworks`);if(!response.ok){throw new Error('Failed to fetch favorite artworks');}const favArtworks=await response.json();console.log('Favorite Artworks by most Saved:',favArtworks);setFavoriteArtworksByMost(favArtworks);// Update state\n}catch(error){console.error('Error fetching favorite artworks by emoji:',error);}};// Call this function in a useEffect or on a button click\nuseEffect(()=>{const fetchData=async()=>{if(userId){const emoji=await fetchUserInfo(userId);if(emoji){setUserEmoji(emoji);await fetchFavArtworksByEmoji(emoji);}}};const fetchMostData=async()=>{if(userId){const mostEmoji=await getMostSavedEmoji();if(mostEmoji){setMostEmoji(mostEmoji);await fetchFavArtworksByMostSavedEmoji(mostEmoji);}}};fetchData();fetchMostData();},[userId]);console.log(\"userId is: \"+userId);// Pagination Logic for favoriteArtworks\nconst totalPagesForFavorites=Math.ceil(favoriteArtworks.length/itemsPerPage);const paginatedFavorites=favoriteArtworks.slice((currentPageForFavorites-1)*itemsPerPage,currentPageForFavorites*itemsPerPage);const goToNextPageForFavorites=()=>{if(currentPageForFavorites<totalPagesForFavorites){setCurrentPageForFavorites(currentPageForFavorites+1);}};const goToPreviousPageForFavorites=()=>{if(currentPageForFavorites>1){setCurrentPageForFavorites(currentPageForFavorites-1);}};// Pagination Logic for favoriteArtworksByMost\nconst totalPagesForMost=Math.ceil(favoriteArtworksByMost.length/itemsPerPage);const paginatedMostFavorites=favoriteArtworksByMost.slice((currentPageForMost-1)*itemsPerPage,currentPageForMost*itemsPerPage);const goToNextPageForMost=()=>{if(currentPageForMost<totalPagesForMost){setCurrentPageForMost(currentPageForMost+1);}};const goToPreviousPageForMost=()=>{if(currentPageForMost>1){setCurrentPageForMost(currentPageForMost-1);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Nav,{onMenuToggle:toggleMenu}),isMenuOpen&&/*#__PURE__*/_jsx(Menu,{userId:userId,onMenuToggle:toggleMenu}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommend-wrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"recommend-header\",children:[/*#__PURE__*/_jsx(\"div\",{children:\"Home / Recommend\"}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Here are some recommended \",/*#__PURE__*/_jsx(\"span\",{children:\"artworks\"}),\" just for you \\uD83D\\uDC4D\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommend-emoji\",children:[\"From others who chose the \",/*#__PURE__*/_jsx(\"span\",{children:\"same\"}),\" emoji(\",userEmoji,\") as you...\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommend-recommend\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"recommend-list\",children:paginatedFavorites.map((artwork,index)=>/*#__PURE__*/_jsx(RecommendCard,{userId:userId,objectId:artwork.object_id,objectName:artwork.object_name,objectUrl:artwork.object_url,objectArtistName:artwork.object_artistName,objectYear:artwork.object_year},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommend-pagination\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:goToPreviousPageForFavorites,disabled:currentPageForFavorites===1,className:\"recommend-left\",children:/*#__PURE__*/_jsx(\"img\",{src:\"img/arrowWhite.svg\",alt:\"left arrow\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:goToNextPageForFavorites,disabled:currentPageForFavorites===totalPagesForFavorites,className:\"recommend-right\",children:/*#__PURE__*/_jsx(\"img\",{src:\"img/arrowWhite.svg\",alt:\"right arrow\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommend-emoji\",children:[\"From others who picked this \",/*#__PURE__*/_jsx(\"span\",{children:\"popular\"}),\" emoji(\",mostEmoji,\")...\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommend-recommend\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"recommend-list\",children:paginatedMostFavorites.map((artwork,index)=>/*#__PURE__*/_jsx(RecommendCard,{userId:userId,objectId:artwork.object_id,objectName:artwork.object_name,objectUrl:artwork.object_url,objectArtistName:artwork.object_artistName,objectYear:artwork.object_year},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommend-pagination\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:goToPreviousPageForMost,disabled:currentPageForMost===1,className:\"recommend-left\",children:/*#__PURE__*/_jsx(\"img\",{src:\"img/arrowWhite.svg\",alt:\"left arrow\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:goToNextPageForMost,disabled:currentPageForMost===totalPagesForMost,className:\"recommend-right\",children:/*#__PURE__*/_jsx(\"img\",{src:\"img/arrowWhite.svg\",alt:\"right arrow\"})})]})]})]})]});}export default Recommend;","map":{"version":3,"names":["useEffect","useState","Nav","Menu","RecommendCard","jsx","_jsx","jsxs","_jsxs","Recommend","_ref","userId","isMenuOpen","setIsMenuOpen","userEmoji","setUserEmoji","mostEmoji","setMostEmoji","favoriteArtworks","setFavoriteArtworks","favoriteArtworksByMost","setFavoriteArtworksByMost","currentPageForFavorites","setCurrentPageForFavorites","currentPageForMost","setCurrentPageForMost","itemsPerPage","toggleMenu","fetchUserInfo","response","fetch","ok","Error","userInfo","json","console","log","emojis","error","fetchFavArtworksByEmoji","emoji","favArtworks","getMostSavedEmoji","mostSavedEmoji","_id","fetchFavArtworksByMostSavedEmoji","fetchData","fetchMostData","totalPagesForFavorites","Math","ceil","length","paginatedFavorites","slice","goToNextPageForFavorites","goToPreviousPageForFavorites","totalPagesForMost","paginatedMostFavorites","goToNextPageForMost","goToPreviousPageForMost","children","onMenuToggle","className","map","artwork","index","objectId","object_id","objectName","object_name","objectUrl","object_url","objectArtistName","object_artistName","objectYear","object_year","onClick","disabled","src","alt"],"sources":["/Users/yoonsoo/Documents/dev/artbook/src/recommend/Recommend.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport Nav from '../Nav.js';\nimport Menu from '../Menu.js';\nimport RecommendCard from './RecommendCard.js';\n\nfunction Recommend({ userId }) {\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const [userEmoji, setUserEmoji] = useState('');\n    const [mostEmoji, setMostEmoji] = useState('');\n    const [favoriteArtworks, setFavoriteArtworks] = useState([]);\n    const [favoriteArtworksByMost, setFavoriteArtworksByMost] = useState([]);\n    \n    const [currentPageForFavorites, setCurrentPageForFavorites] = useState(1); // Pagination for favoriteArtworks\n    const [currentPageForMost, setCurrentPageForMost] = useState(1); // Pagination for favoriteArtworksByMost\n    const itemsPerPage = 5; // Number of items per page for both lists\n\n    const toggleMenu = () => {\n        setIsMenuOpen(!isMenuOpen);\n    };\n\n    const fetchUserInfo = async (userId) => {\n        try {\n            const response = await fetch(`http://localhost:8000/api/users/${userId}`);\n    \n            if (!response.ok) {\n                throw new Error('Failed to load favorite artworks');\n            }\n    \n            const userInfo = await response.json();\n            console.log('User Information Emoji:', userInfo.emojis);\n            return userInfo.emojis;\n        } catch (error) {\n            console.error('Error fetching favorite artworks:', error);\n            return null;\n        }\n    };\n\n    // Fetch favorite artworks by emoji\n    const fetchFavArtworksByEmoji = async (emoji) => {\n        try {\n            const response = await fetch(`http://localhost:8000/api/users/emojis/${emoji}/fav-artworks`);\n            if (!response.ok) {\n                throw new Error('Failed to fetch favorite artworks');\n            }\n            const favArtworks = await response.json();\n            console.log('Favorite Artworks:', favArtworks);\n            setFavoriteArtworks(favArtworks); // Update state\n        } catch (error) {\n            console.error('Error fetching favorite artworks by emoji:', error);\n        }\n    };\n\n    // Get the most saved emoji\n    const getMostSavedEmoji = async () => {\n        try {\n            const response = await fetch(`http://localhost:8000/api/users/aggregate/most-saved-emojis`);\n\n            if(!response.ok) {\n                throw new Error('Failed to fetch favorite artworks');\n            }\n\n            const mostSavedEmoji = await response.json();\n            console.log(mostSavedEmoji[0]._id);\n            return mostSavedEmoji[0]._id;\n        } catch (error) {\n            console.error(error);\n            return null;\n        }\n    }\n\n    // Fetch favorite artworks by most saved emoji\n    const fetchFavArtworksByMostSavedEmoji = async (mostEmoji) => {\n        try {\n            const response = await fetch(`http://localhost:8000/api/users/emojis/${mostEmoji}/fav-artworks`);\n            if (!response.ok) {\n                throw new Error('Failed to fetch favorite artworks');\n            }\n            const favArtworks = await response.json();\n            console.log('Favorite Artworks by most Saved:', favArtworks);\n            setFavoriteArtworksByMost(favArtworks); // Update state\n        } catch (error) {\n            console.error('Error fetching favorite artworks by emoji:', error);\n        }\n    };\n    \n    // Call this function in a useEffect or on a button click\n    useEffect(() => {\n        const fetchData = async () => {\n            if (userId) {\n                const emoji = await fetchUserInfo(userId);\n                if (emoji) {\n                    setUserEmoji(emoji);\n                    await fetchFavArtworksByEmoji(emoji);\n                }\n            }\n        };\n\n        const fetchMostData = async () => {\n            if (userId) {\n                const mostEmoji = await getMostSavedEmoji();\n                if (mostEmoji) {\n                    setMostEmoji(mostEmoji);\n                    await fetchFavArtworksByMostSavedEmoji(mostEmoji);\n                }\n            }\n        };\n        fetchData();\n        fetchMostData();\n    }, [userId]);\n    \n    \n    console.log(\"userId is: \" + userId);\n\n    // Pagination Logic for favoriteArtworks\n    const totalPagesForFavorites = Math.ceil(favoriteArtworks.length / itemsPerPage);\n    const paginatedFavorites = favoriteArtworks.slice(\n        (currentPageForFavorites - 1) * itemsPerPage,\n        currentPageForFavorites * itemsPerPage\n    );\n\n    const goToNextPageForFavorites = () => {\n        if (currentPageForFavorites < totalPagesForFavorites) {\n            setCurrentPageForFavorites(currentPageForFavorites + 1);\n        }\n    };\n\n    const goToPreviousPageForFavorites = () => {\n        if (currentPageForFavorites > 1) {\n            setCurrentPageForFavorites(currentPageForFavorites - 1);\n        }\n    };\n\n    // Pagination Logic for favoriteArtworksByMost\n    const totalPagesForMost = Math.ceil(favoriteArtworksByMost.length / itemsPerPage);\n    const paginatedMostFavorites = favoriteArtworksByMost.slice(\n        (currentPageForMost - 1) * itemsPerPage,\n        currentPageForMost * itemsPerPage\n    );\n\n    const goToNextPageForMost = () => {\n        if (currentPageForMost < totalPagesForMost) {\n            setCurrentPageForMost(currentPageForMost + 1);\n        }\n    };\n\n    const goToPreviousPageForMost = () => {\n        if (currentPageForMost > 1) {\n            setCurrentPageForMost(currentPageForMost - 1);\n        }\n    };\n    \n    return(\n        <div>\n            <Nav onMenuToggle={toggleMenu} />\n            {isMenuOpen && <Menu userId={userId} onMenuToggle={toggleMenu}  />}\n            \n            <div className=\"recommend-wrapper\">\n                <div className=\"recommend-header\">\n                    <div>Home / Recommend</div>\n                    <div>Here are some recommended <span>artworks</span> just for you 👍</div>\n                </div>\n\n                <div className=\"recommend-emoji\">From others who chose the <span>same</span> emoji({userEmoji}) as you...</div>\n                <div className=\"recommend-recommend\">\n                    <div className=\"recommend-list\">\n                        {paginatedFavorites.map((artwork, index) => (\n                            <RecommendCard \n                                key={index}\n                                userId={userId}\n                                objectId={artwork.object_id}\n                                objectName={artwork.object_name}\n                                objectUrl={artwork.object_url}\n                                objectArtistName={artwork.object_artistName}\n                                objectYear={artwork.object_year}\n                            />\n                        ))}\n                    </div>\n                    <div className=\"recommend-pagination\">\n                        <button onClick={goToPreviousPageForFavorites} disabled={currentPageForFavorites === 1} className=\"recommend-left\">\n                            <img src=\"img/arrowWhite.svg\" alt=\"left arrow\" />\n                        </button>\n                        <button onClick={goToNextPageForFavorites} disabled={currentPageForFavorites === totalPagesForFavorites} className=\"recommend-right\">\n                            <img src=\"img/arrowWhite.svg\" alt=\"right arrow\" />\n                        </button>\n                    </div>\n                </div>\n\n                <div className=\"recommend-emoji\">From others who picked this <span>popular</span> emoji({mostEmoji})...</div>\n                <div className=\"recommend-recommend\">\n                    <div className=\"recommend-list\">\n                        {paginatedMostFavorites.map((artwork, index) => (\n                        <RecommendCard \n                            key={index}\n                            userId={userId}\n                            objectId={artwork.object_id}\n                            objectName={artwork.object_name}\n                            objectUrl={artwork.object_url}\n                            objectArtistName={artwork.object_artistName}\n                            objectYear={artwork.object_year}\n                        />\n                        ))}\n                    </div>\n                    <div className=\"recommend-pagination\">\n                        <button onClick={goToPreviousPageForMost} disabled={currentPageForMost === 1} className=\"recommend-left\">\n                            <img src=\"img/arrowWhite.svg\" alt=\"left arrow\" />\n                        </button>\n                        <button onClick={goToNextPageForMost} disabled={currentPageForMost === totalPagesForMost} className=\"recommend-right\">\n                            <img src=\"img/arrowWhite.svg\" alt=\"right arrow\" />\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Recommend;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}