{"ast":null,"code":"var _jsxFileName = \"/Users/yoonsoo/Documents/dev/artbook/src/categories/ArtStyle.js\",\n  _s = $RefreshSig$();\nimport ResultArray from './ResultArray';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Result({\n  userId\n}) {\n  _s();\n  // https://reactrouter.com/en/main/hooks/use-search-params\n  // https://developer.mozilla.org/en-US/docs/Web/API/Location/search\n  // Utilize useSearchParams from React Router DOM as the search parameter for the API\n  const [searchParams] = useSearchParams();\n  const idParam = searchParams.get('id');\n  const categoryParam = searchParams.get('category');\n  const [artworkData, setArtworkData] = useState([]);\n  const [navId, setnavId] = useState(\"\");\n  useEffect(() => {\n    // To pass selected card's objectId to Result Array Component\n    setnavId(idParam);\n  }, [idParam]);\n  useEffect(() => {\n    if (idParam && categoryParam) {\n      fetch(`https://collectionapi.metmuseum.org/public/collection/v1/objects/${idParam}`).then(response => response.json()).then(() => {\n        fetch(`https://collectionapi.metmuseum.org/public/collection/v1/search?hasImages=true&isOnView=true&q=${categoryParam}`).then(response => response.json()).then(data => {\n          // https://chatgpt.com/share/67008882-ac10-8011-802e-5e003a44ac44 \n          // Pass the objectIDs array to the ResultArray component\n          setArtworkData(data.objectIDs);\n        });\n      }).catch(error => console.log(error));\n    }\n  }, [idParam, categoryParam]);\n  return /*#__PURE__*/_jsxDEV(ResultArray, {\n    value: artworkData,\n    navName: \"artStyle\",\n    navId: navId,\n    userId: userId\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(Result, \"aSfwDuj9oJ6qa8C4kRY1CYY+bVU=\", false, function () {\n  return [useSearchParams];\n});\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["ResultArray","useSearchParams","useEffect","useState","jsxDEV","_jsxDEV","Result","userId","_s","searchParams","idParam","get","categoryParam","artworkData","setArtworkData","navId","setnavId","fetch","then","response","json","data","objectIDs","catch","error","console","log","value","navName","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yoonsoo/Documents/dev/artbook/src/categories/ArtStyle.js"],"sourcesContent":["import ResultArray from './ResultArray';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nfunction Result({ userId }) {\n    // https://reactrouter.com/en/main/hooks/use-search-params\n    // https://developer.mozilla.org/en-US/docs/Web/API/Location/search\n    // Utilize useSearchParams from React Router DOM as the search parameter for the API\n    const [searchParams] = useSearchParams();\n    const idParam = searchParams.get('id');\n    const categoryParam = searchParams.get('category');\n    const [artworkData, setArtworkData] = useState([]);\n    const [navId, setnavId] = useState(\"\");\n\n    useEffect(() => {\n        // To pass selected card's objectId to Result Array Component\n        setnavId(idParam);\n    }, [idParam]);\n\n    useEffect(() => {\n        if (idParam && categoryParam) {\n            fetch(`https://collectionapi.metmuseum.org/public/collection/v1/objects/${idParam}`)\n            .then(response => response.json())\n            .then(() => {\n                fetch(`https://collectionapi.metmuseum.org/public/collection/v1/search?hasImages=true&isOnView=true&q=${categoryParam}`)\n                .then(response => response.json())\n                .then(data => {\n                        // https://chatgpt.com/share/67008882-ac10-8011-802e-5e003a44ac44 \n                        // Pass the objectIDs array to the ResultArray component\n                        setArtworkData(data.objectIDs)\n                    })\n                })\n                .catch(error => console.log(error));\n            }\n        }, [idParam, categoryParam]);\n        \n    return (\n        <ResultArray value={artworkData} navName=\"artStyle\" navId={navId} userId={userId} />\n    );\n}\n\nexport default Result;\n"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,MAAMA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACxB;EACA;EACA;EACA,MAAM,CAACC,YAAY,CAAC,GAAGR,eAAe,CAAC,CAAC;EACxC,MAAMS,OAAO,GAAGD,YAAY,CAACE,GAAG,CAAC,IAAI,CAAC;EACtC,MAAMC,aAAa,GAAGH,YAAY,CAACE,GAAG,CAAC,UAAU,CAAC;EAClD,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ;IACAc,QAAQ,CAACN,OAAO,CAAC;EACrB,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEbR,SAAS,CAAC,MAAM;IACZ,IAAIQ,OAAO,IAAIE,aAAa,EAAE;MAC1BK,KAAK,CAAC,oEAAoEP,OAAO,EAAE,CAAC,CACnFQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAC,MAAM;QACRD,KAAK,CAAC,kGAAkGL,aAAa,EAAE,CAAC,CACvHM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;UACN;UACA;UACAP,cAAc,CAACO,IAAI,CAACC,SAAS,CAAC;QAClC,CAAC,CAAC;MACN,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;IACvC;EACJ,CAAC,EAAE,CAACd,OAAO,EAAEE,aAAa,CAAC,CAAC;EAEhC,oBACIP,OAAA,CAACL,WAAW;IAAC2B,KAAK,EAAEd,WAAY;IAACe,OAAO,EAAC,UAAU;IAACb,KAAK,EAAEA,KAAM;IAACR,MAAM,EAAEA;EAAO;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE5F;AAACxB,EAAA,CAnCQF,MAAM;EAAA,QAIYL,eAAe;AAAA;AAAAgC,EAAA,GAJjC3B,MAAM;AAqCf,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}