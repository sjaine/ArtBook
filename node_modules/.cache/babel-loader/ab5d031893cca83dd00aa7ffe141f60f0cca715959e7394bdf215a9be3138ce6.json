{"ast":null,"code":"var _jsxFileName = \"/Users/yoonsoo/Documents/dev/artbook/src/categories/Medium.js\",\n  _s = $RefreshSig$();\nimport ResultArray from './ResultArray';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Result({\n  userId\n}) {\n  _s();\n  // https://reactrouter.com/en/main/hooks/use-search-params\n  // https://developer.mozilla.org/en-US/docs/Web/API/Location/search\n  // Utilize useSearchParams from React Router DOM as the search parameter for the API\n  const [searchParams] = useSearchParams();\n  const idParam = searchParams.get('id');\n  const categoryParam = searchParams.get('category');\n  const [artworkData, setArtworkData] = useState([]);\n  const [navId, setnavId] = useState(\"\");\n  useEffect(() => {\n    setnavId(idParam);\n  }, [idParam]);\n  useEffect(() => {\n    if (idParam && categoryParam) {\n      fetch(`https://collectionapi.metmuseum.org/public/collection/v1/objects/${idParam}`).then(response => response.json()).then(data => {\n        console.log(data);\n        fetch(`https://collectionapi.metmuseum.org/public/collection/v1/search?hasImages=true&isOnView=true&q=${categoryParam}`).then(response => response.json()).then(searchData => {\n          // Check if objectIDs exist, then filter out objectID 78870\n          if (searchData.objectIDs) {\n            const filteredIDs = searchData.objectIDs.filter(id => id !== 78870);\n            // Update state with the filtered objectIDs\n            setArtworkData(filteredIDs);\n          }\n        }).catch(error => console.log(error));\n      }).catch(error => console.log(error));\n    }\n  }, [idParam, categoryParam]);\n  return /*#__PURE__*/_jsxDEV(ResultArray, {\n    value: artworkData,\n    navName: \"medium\",\n    navId: navId,\n    userId: userId\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(Result, \"aSfwDuj9oJ6qa8C4kRY1CYY+bVU=\", false, function () {\n  return [useSearchParams];\n});\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["ResultArray","useSearchParams","useEffect","useState","jsxDEV","_jsxDEV","Result","userId","_s","searchParams","idParam","get","categoryParam","artworkData","setArtworkData","navId","setnavId","fetch","then","response","json","data","console","log","searchData","objectIDs","filteredIDs","filter","id","catch","error","value","navName","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yoonsoo/Documents/dev/artbook/src/categories/Medium.js"],"sourcesContent":["import ResultArray from './ResultArray';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nfunction Result({ userId }) {\n    // https://reactrouter.com/en/main/hooks/use-search-params\n    // https://developer.mozilla.org/en-US/docs/Web/API/Location/search\n    // Utilize useSearchParams from React Router DOM as the search parameter for the API\n    const [searchParams] = useSearchParams();\n    const idParam = searchParams.get('id');\n    const categoryParam = searchParams.get('category');\n    const [artworkData, setArtworkData] = useState([]);\n    const [navId, setnavId] = useState(\"\");\n\n    useEffect(() => {\n        setnavId(idParam);\n    }, [idParam]);\n\n    useEffect(() => {\n        if (idParam && categoryParam) {\n            fetch(`https://collectionapi.metmuseum.org/public/collection/v1/objects/${idParam}`)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(data);\n    \n                    fetch(`https://collectionapi.metmuseum.org/public/collection/v1/search?hasImages=true&isOnView=true&q=${categoryParam}`)\n                        .then(response => response.json())\n                        .then(searchData => {\n                            // Check if objectIDs exist, then filter out objectID 78870\n                            if (searchData.objectIDs) {\n                                const filteredIDs = searchData.objectIDs.filter(id => id !== 78870);\n                                // Update state with the filtered objectIDs\n                                setArtworkData(filteredIDs);\n                            }\n                        })\n                        .catch(error => console.log(error));\n                })\n                .catch(error => console.log(error));\n        }\n    }, [idParam, categoryParam]);\n        \n    return (\n        <ResultArray value={artworkData} navName=\"medium\" navId={navId} userId={userId} />\n    );\n}\n\nexport default Result;\n"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,MAAMA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACxB;EACA;EACA;EACA,MAAM,CAACC,YAAY,CAAC,GAAGR,eAAe,CAAC,CAAC;EACxC,MAAMS,OAAO,GAAGD,YAAY,CAACE,GAAG,CAAC,IAAI,CAAC;EACtC,MAAMC,aAAa,GAAGH,YAAY,CAACE,GAAG,CAAC,UAAU,CAAC;EAClD,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZc,QAAQ,CAACN,OAAO,CAAC;EACrB,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEbR,SAAS,CAAC,MAAM;IACZ,IAAIQ,OAAO,IAAIE,aAAa,EAAE;MAC1BK,KAAK,CAAC,oEAAoEP,OAAO,EAAE,CAAC,CAC/EQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACVC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QAEjBJ,KAAK,CAAC,kGAAkGL,aAAa,EAAE,CAAC,CACnHM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACM,UAAU,IAAI;UAChB;UACA,IAAIA,UAAU,CAACC,SAAS,EAAE;YACtB,MAAMC,WAAW,GAAGF,UAAU,CAACC,SAAS,CAACE,MAAM,CAACC,EAAE,IAAIA,EAAE,KAAK,KAAK,CAAC;YACnE;YACAd,cAAc,CAACY,WAAW,CAAC;UAC/B;QACJ,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAIR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC,CAAC;MAC3C,CAAC,CAAC,CACDD,KAAK,CAACC,KAAK,IAAIR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC,CAAC;IAC3C;EACJ,CAAC,EAAE,CAACpB,OAAO,EAAEE,aAAa,CAAC,CAAC;EAE5B,oBACIP,OAAA,CAACL,WAAW;IAAC+B,KAAK,EAAElB,WAAY;IAACmB,OAAO,EAAC,QAAQ;IAACjB,KAAK,EAAEA,KAAM;IAACR,MAAM,EAAEA;EAAO;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE1F;AAAC5B,EAAA,CAxCQF,MAAM;EAAA,QAIYL,eAAe;AAAA;AAAAoC,EAAA,GAJjC/B,MAAM;AA0Cf,eAAeA,MAAM;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}